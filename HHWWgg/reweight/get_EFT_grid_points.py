
import sys

def get_EFT_point( index=0, model="EWChL", Debug=False ):
  name=str(index)
  answer = []
  if name ==  "0" : answer =  [ 1.0,  1.0, 0.0, 0.0, 0.0]
  if name ==  "1" : answer =  [ 7.5,  1.0, -1.0, 0.0, 0.0]
  if name ==  "2" : answer =  [ 1.0,  1.0, 0.5, -0.8, 0.6]
  if name ==  "3" : answer =  [ 1.0,  1.0, -1.5, 0.0, -0.8]
  if name ==  "4" : answer =  [-3.5,  1.5, -3.0, 0.0, 0.0]
  if name ==  "5" : answer =  [ 1.0,  1.0, 0.0, 0.8, -1.0]
  if name ==  "6" : answer =  [ 2.4,  1.0, 0.0, 0.2, -0.2]
  if name ==  "7" : answer =  [ 5.0,  1.0, 0.0, 0.2, -0.2]
  if name ==  "8" : answer =  [ 15.0, 1.0, 0.0, -1.0, 1.0]
  if name ==  "9" : answer =  [ 1.0,  1.0, 1.0, -0.6, 0.6]
  if name ==  "10" : answer = [10.0,  1.5, -1.0, 0.0, 0.0]
  if name ==  "11" : answer = [ 2.4,  1.0, 0.0, 1.0, -1.0]
  if name ==  "12" : answer = [15.0,  1.0, 1.0, 0.0, 0.0]

  possibles = []
  for x1 in [1, -1]:
    for x2 in [1, -1]:
      for x3 in [1, -1]:
        for x4 in [1, -1]:
          for x5 in [1, -1]:
            possibles += [ [x1, x2, x3, x4, x5] ]
  if index > 12 :
    answer = possibles[ index-12 ]

  possibles = []
  for x2 in [1, 0, -1]:
    for x3 in [1, 0, -1]:
      for x4 in [1, 0, -1]:
        for x5 in [1, 0, -1]:
          for x1 in [1, 0, -1]:
            if abs(x1) + abs(x2) + abs(x3) + abs(x4) + abs(x5) != 4 : continue
            possibles += [ [x1, x2, x3, x4, x5] ]
  if index > 12+15 :
    answer = possibles[ index-12-15 ]

  if Debug:
      c3, ct, ctt, cg, cgg = answer
      A_values  = [2.23389, 12.4598, 0.342248, 0.346822, 13.0087, -9.6455, -1.57553, 3.43849, 2.86694, 16.6912, -1.25293, -5.81216, 0.649714, 2.85933, 3.14475, -0.00816241, 0.0208652, 0.0168157, 0.0298576, -0.0270253, 0.0726921, 0.0145232, 0.123291]
      couplings = [ pow(ct,4), pow(ctt,2), pow(c3 * ct,2), pow(c3*cg,2), pow(cgg,2), ctt*pow(ct,2), pow(ct,3)*c3,
                      ct*c3*ctt, cg*c3*ctt, ctt*cgg, pow(ct,2)*cg*c3, pow(ct,2)*cgg, 
                      ct*pow(c3,2)*cg, ct*c3*cgg, cg*c3*cgg, 
                      pow(ct,3)*cg, ct*ctt*cg, ct*c3*pow(cg,2), cg*ct*cgg, 
                      pow(ct*cg,2), ctt*pow(cg,2), pow(cg,3)*c3, pow(cg,2)*cgg ]

      xsection = 0
      for A, coupling in zip(A_values, couplings):
        xsection += A * coupling
      #print couplings, ","
      print answer[0], answer[1], answer[2], answer[3], answer[4], "Check xsec '", index, int(xsection)

  if model == "EWChL":
    c3  = answer[0];
    ct  = answer[1];
    ctt = answer[2]               ; #/ pow(8.91217E-02 * 1000  / (19.85 * 10.20), 0.5);
    cg  = answer[3] * 2. / 3.     ; #/ pow(5.35384E-03 * 1000  / (19.85 * 0.314043), 0.5);
    cgg = answer[4] * (-1.) / 3.  ; #/ pow(2.00524E-01 * 1000  / (19.85 * 12.2731), 0.5);
    answer = [ c3, ct, ctt, cg, cgg ];
  if model != "silent" : print answer[0], answer[1], answer[2], answer[3], answer[4]
  return answer[0], answer[1], answer[2], answer[3], answer[4]

if __name__ == "__main__" :
  if len(sys.argv) == 1 : 
    for i in xrange(44):
      k1, k2, k3, k4, k5 = get_EFT_point( i, "silent" )
      print "if(bm == ", str(i), ") { k1 = ", str(k1), "; k2 = ", str(k2), "; k3 = ", str(k3), "; k4 = ", str(k4), "; k5 = ", str(k5), "; };"
  elif len(sys.argv) == 2 : 
    get_EFT_point( int(sys.argv[1]) )
  else : 
    get_EFT_point( int(sys.argv[1]), sys.argv[2] )

  points = [ [1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1] ,
[1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1, 1] ,
[1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, -1, -1] ,
[1, 1, 1, 1, 1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1] ,
[1, 1, 1, 1, 1, -1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1] ,
[1, 1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1] ,
[1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1] ,
[1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1] ,
[1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1] ,
[1, 1, 1, 1, 1, 1, -1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1] ,
[1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, -1] ,
[1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1] ,
[1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, -1] ,
[1, 1, 1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1] ,
[1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, -1, 1, -1, -1, -1] ,
[1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0] ,
[1, 1, 1, 1, 0, 1, -1, -1, -1, 0, -1, 0, 1, 0, 0, 1, 1, -1, 0, 1, 1, -1, 0] ,
[1, 1, 0, 0, 1, 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 1, 1, 0, -1, 1, 1, 0, -1] ,
[1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[1, 1, 1, 0, 1, 1, -1, -1, 0, 1, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[1, 1, 1, 0, 1, 1, 1, 1, 0, -1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[1, 1, 1, 0, 1, 1, -1, -1, 0, -1, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] ,
[1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, -1, 0, -1, 1, 1, 0, 1] ,
[1, 1, 1, 1, 0, 1, 1, 1, -1, 0, -1, 0, -1, 0, 0, -1, -1, 1, 0, 1, 1, -1, 0] ,
[1, 1, 1, 1, 0, 1, -1, -1, 1, 0, 1, 0, -1, 0, 0, -1, -1, -1, 0, 1, 1, 1, 0] ,
[1, 1, 0, 0, 1, 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, -1, -1, 0, 1, 1, 1, 0, -1] ,
[1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1] ,
[1, 0, 1, 1, 1, 0, -1, 0, 0, 0, -1, 1, 1, -1, -1, 1, 0, -1, 1, 1, 0, -1, 1] ,
[1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, -1, 1, -1, -1, 1, 0, 1, -1, 1, 0, 1, -1] ,
[1, 0, 1, 1, 1, 0, -1, 0, 0, 0, -1, -1, 1, 1, 1, 1, 0, -1, -1, 1, 0, -1, -1] ,
[1, 0, 1, 1, 1, 0, 1, 0, 0, 0, -1, 1, -1, 1, -1, -1, 0, 1, -1, 1, 0, -1, 1] , ]

  for i, x1 in enumerate(points):
    for j, x2 in enumerate(points):
      #if(x1==x2) and i != j : print i+13, j+13, i, j, x1
      pass

















